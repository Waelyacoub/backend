name: Build, Analyze and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js (if needed)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Spécifiez la version de Node.js que vous utilisez

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install
      # Step 4: Install SonarScanner
      # - name: Install SonarScanner
      #   run: |
      #     wget -O sonarscanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
      #     unzip sonarscanner.zip
      #     mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
      #     echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      # Step 5: Run SonarQube Scan (SonarCloud)
      # - name: Run SonarQube Scan
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: "https://sonarcloud.io"
      #   run: |
      #     sonar-scanner \
      #       -Dsonar.projectKey=waelyacoub  # Remplacez par votre clé de projet SonarCloud
      #       -Dsonar.sources=.  # Répertoire des sources de code
      #       -Dsonar.host.url=$SONAR_HOST_URL \
      #       -Dsonar.login=$SONAR_TOKEN \
      #       -Dsonar.organization=Waelyacoub # Remplacez par votre organisation SonarCloud


      # Step 6: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest ${{ secrets.DOCKER_USERNAME }}/nodejs-app:${{ github.sha }}

      # Step 7: Install Trivy (Docker Image Vulnerability Scanner)
      - name: Install Trivy
        run: |
          TRIVY_VERSION="0.60.0"
          wget -qO- "https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz" | tar xz
          sudo mv trivy /usr/local/bin/

      # Step 8: Run Trivy Security Scan
      - name: Run Trivy Security Scan
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest
          trivy image --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKER_USERNAME }}/nodejs-app:${{ github.sha }}

      # Step 9: Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 10: Push Docker Image to DockerHub
      - name: Push Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-app:${{ github.sha }}
